(defn Symbol
  [name]
  (set! this.name name)
  this)

(set! Symbol.prototype.type "crisp.types/symbol")
(set! Symbol.prototype.equal
      (fn [other]
        (and (identical? this.type other.type)
             (identical? this.name other.name))))
(set! Symbol.prototype.toString
      (fn []
        this.name))
(export Symbol)

(defn Keyword
  [name]
  (set! this.name name)
  this)

(set! Keyword.prototype.type "crisp.types/keyword")
(set! Keyword.prototype.equal
      (fn [other]
        (and (identical? this.type other.type)
             (identical? this.name other.name))))
(set! Keyword.prototype.toString
      (fn []
        (+ ":" this.name)))
(export Keyword)
